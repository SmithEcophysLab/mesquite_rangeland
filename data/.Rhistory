sm_raw = read.csv('raw/soil_moisture.csv')
## load packages
library(tidyverse)
head(sm_raw)
?data.frame
## make a new data frame
sm_colnames = c('day', 'month', 'year', 'doy', 'date', 'plot', 'location', 'vwc')
rep(5, times = 4)
nrow(sm_raw)
as.Date(7/27/18)
as.Date('7/27/18')
as.Date('July 27, 2018')
?as.Date
as.Date('2018-07-27')
rep(as.Date('2018-07-27'), times = 80)
sm_raw[2, ]
sm_date = c(rep(as.Date('2018-07-27'), times = 80),
rep(as.Date('2018-08-03'), times = 80),
rep(as.Date('2018-08-09'), times = 80),
rep(as.Date('2018-08-16'), times = 80),
rep(as.Date('2018-08-24'), times = 80),
rep(as.Date('2018-08-30'), times = 80),
rep(as.Date('2018-09-07'), times = 80),
rep(as.Date('2018-09-16'), times = 80))
sm_date
?month
?day
?year
?doy
?yday
yday('2018-09-16')
## load packages
library(tidyverse)
?library
## make a new data frame
sm_colnames = c('day', 'month', 'year', 'doy', 'date', 'plot', 'location', 'vwc')
## load packages
library(tidyverse)
## read in data
sm_raw = read.csv('raw/soil_moisture.csv')
head(sm_raw)
nrow(sm_raw)
tail(sm_raw)
sm_date = c(rep(as.Date('2018-07-27'), times = 80),
rep(as.Date('2018-08-03'), times = 80),
rep(as.Date('2018-08-09'), times = 80),
rep(as.Date('2018-08-16'), times = 80),
rep(as.Date('2018-08-24'), times = 80),
rep(as.Date('2018-08-30'), times = 80),
rep(as.Date('2018-09-07'), times = 80),
rep(as.Date('2018-09-16'), times = 80))
sm_plot = c(rep(seq(1, 40, 1), length(sm_date)))
sm_plot
length(sm_plot)
length(sm_date)
sm_plot = c(rep(seq(1, 40, 1), times = 16))
length(sm_plot)
length(sm_date)
head(sm_raw)
c(rep('under', times = 40), rep('away', times = 40))
sm_location = rep(c(rep('under', times = 40), rep('away', times = 40)), times = 8)
sm_location
head(sm_raw)
nrow(sm_raw)
c(sm_raw[2:41, c(2, 3)])
c(sm_raw[2:41, c(2)])
c(sm_raw[2:41, 2], sm_raw[2:41, 3])
c(sm_raw[2:41, 2], sm_raw[2:41, 3], sm_raw[2:41, 5], sm_raw[2:41, 6],
sm_raw[2:41, 8], sm_raw[2:41, 9], sm_raw[2:41, 11], sm_raw[2:41, 12],
sm_raw[2:41, 14], sm_raw[2:41, 15], sm_raw[2:41, 17], sm_raw[2:41, 18],
sm_raw[2:41, 20], sm_raw[2:41, 21], sm_raw[2:41, 23], sm_raw[2:41, 24])
as.numeric(sm_raw[2:41, 2])
as.numeric(as.character(sm_raw[2:41, 2]))
head(sm_raw)
sm_vwc_rows = c(2, 3, 5, 6, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 23, 24)
c(as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[1]])) )
c(as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[1]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[2]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[3]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[4]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[5]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[6]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[7]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[8]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[9]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[10]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[11]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[12]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[13]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[14]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[15]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[16]])))
sm_vwc = c(as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[1]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[2]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[3]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[4]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[5]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[6]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[7]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[8]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[9]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[10]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[11]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[12]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[13]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[14]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[15]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[16]])))
# combine it all together
sm_clean = cbind(sm_date, sm_plot, sm_location, sm_vwc)
colnames(sm_clean) = sm_colnames
## make a new data frame
sm_colnames = c('date', 'plot', 'location', 'vwc')
colnames(sm_clean) = sm_colnames
head(sm_clean)
# combine it all together
sm_clean = as.data.frame(sm_date, sm_plot, sm_location, sm_vwc)
?as.data.frame
# combine it all together
sm_clean = as.data.frame(NULL)
colnames(sm_clean) = sm_colnames
sm_colnames
# combine it all together
sm_clean = as.data.frame(NULL, ncol = 4)
colnames(sm_clean) = sm_colnames
sm_clean
# combine it all together
sm_clean = as.data.frame(NULL)
sm_clean$date = sm_date
?expand.grid
expand.grid(sm_date, sm_vwc)
# combine it all together
sm_clean = expand.grid(sm_date, sm_plot, sm_location, sm_vwc)
# combine it all together
sm_clean = expand.grid(date = sm_date, plot = sm_plot)
sm_clean$location = sm_location
sm_clean_vwc = sm_vwc
sm_clean$vwc = sm_vwc
head(sm_clean)
## load packages
library(tidyverse)
## read in data
sm_raw = read.csv('raw/biomass.csv')
## read in data
bm_raw = read.csv('raw/biomass.csv')
head(bm_raw)
nrow(bm_raw)
## plot
bm_plot = bm_raw$plot
bm_plot
## location
bm_location = bm_raw$X.A.U.
## read in data
sm_raw = read.csv('raw/soil_moisture.csv')
head(sm_raw)
nrow(sm_raw)
## make a new data frame
sm_date = c(rep(as.Date('2018-07-27'), times = 80),
rep(as.Date('2018-08-03'), times = 80),
rep(as.Date('2018-08-09'), times = 80),
rep(as.Date('2018-08-16'), times = 80),
rep(as.Date('2018-08-24'), times = 80),
rep(as.Date('2018-08-30'), times = 80),
rep(as.Date('2018-09-07'), times = 80),
rep(as.Date('2018-09-16'), times = 80))
sm_plot = c(rep(seq(1, 40, 1), times = 16))
sm_location = rep(c(rep('under', times = 40), rep('away', times = 40)), times = 8)
sm_vwc_rows = c(2, 3, 5, 6, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 23, 24)
sm_vwc = c(as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[1]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[2]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[3]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[4]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[5]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[6]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[7]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[8]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[9]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[10]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[11]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[12]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[13]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[14]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[15]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[16]])))
# combine it all together
sm_clean = expand.grid(date = sm_date, plot = sm_plot)
sm_clean$location = sm_location
sm_clean$vwc = sm_vwc
head(sm_clean)
write.csv(sm_clean, 'sm_clean.csv')
nrow(bm_raw)
## date
bm_date = rep(as.Date('2018-09-22'), times = 217)
bm_date
bm_location
bm_location[bm_location == 'A'] <- 'away'
## location
bm_location = as.character(bm_raw$X.A.U.)
bm_location
bm_location[bm_location == 'A'] <- 'away'
bm_location[bm_location == 'a'] <- 'away'
bm_location[bm_location == 'a '] <- 'away'
bm_location
bm_location[bm_location == 'U'] <- 'under'
bm_location
bm_location[bm_location == 'u'] <- 'under'
bm_location[bm_location == 'U'] <- 'under'
bm_location
bm_location = as.character(bm_raw$X.A.U.)
bm_location[bm_location == 'A'] <- 'away'
bm_location[bm_location == 'a'] <- 'away'
bm_location[bm_location == 'a '] <- 'away'
bm_location[bm_location == 'u'] <- 'under'
bm_location[bm_location == 'U'] <- 'under'
bm_location
head(bm_raw)
## species
bm_species = bm_raw$Species
bm_species
## species
bm_species_fac = bm_raw$Species
levels(bm_species_fac)
bm_species = as.character(bm_raw$Species)
bm_species[bm_species == 'DEAD' | bm_species == 'dead' | bm_species = 'dead ' |
bm_species == 'DEAD '] <- 'DEAD'
bm_species[bm_species == 'DEAD' | bm_species == 'dead' | bm_species == 'dead ' |
bm_species == 'DEAD '] <- 'DEAD'
bm_species[bm_species == 'Ambrosia p.' | Ambrosia p. == 'ambrosia p.\xca'] < - 'AmPS'
bm_species[bm_species == 'Ambrosia p.' | bm_species == 'ambrosia p.\xca'] < - 'AmPS'
bm_species[bm_species == 'Ambrosia p.' | bm_species == 'ambrosia p.\xca'] <- 'AmPS'
levels(bm_species_fac)
bm_species_fac_levels = levels(bm_species_fac)
bm_species_fac_levels
bm_species[bm_species == bm_species_fac[1] | bm_species == bm_species_fac[2]] <- 'AmPS'
bm_species[bm_species == bm_species_fac[3] | bm_species == bm_species_fac[4] |
bm_species == bm_species_fac[5] | bm_species == bm_species_fac[6] |
bm_species == bm_species_fac[7] | bm_species == bm_species_fac[8]] <- 'BoGr'
bm_species_fac[17]
bm_species_fac_levels[8]
bm_species_fac_levels[3]
bm_species_fac_levels[17]
bm_species_fac_levels[9]
bm_species[bm_species == bm_species_fac_levels[9] |
bm_species == bm_species_fac_levels[10] |
bm_species == bm_species_fac_levels[11] |
bm_species == bm_species_fac_levels[12] |
bm_species == bm_species_fac_levels[13] |
bm_species == bm_species_fac_levels[14] |
bm_species == bm_species_fac_levels[15] |
bm_species == bm_species_fac_levels[16] |
bm_species == bm_species_fac_levels[17]] <- 'ChLa'
bm_species_fac = bm_raw$Species
bm_species_fac_levels = levels(bm_species_fac)
bm_species = as.character(bm_raw$Species)
bm_species[bm_species == 'DEAD' | bm_species == 'dead' | bm_species == 'dead ' |
bm_species == 'DEAD '] <- 'DEAD'
bm_species[bm_species == bm_species_fac_levels[1] |
bm_species == bm_species_fac_levels[2]] <- 'AmPS'
bm_species[bm_species == bm_species_fac_levels[3] |
bm_species == bm_species_fac_levels[4] |
bm_species == bm_species_fac_levels[5] |
bm_species == bm_species_fac_levels[6] |
bm_species == bm_species_fac_levels[7] |
bm_species == bm_species_fac_levels[8]] <- 'BoGr'
bm_species[bm_species == bm_species_fac_levels[9] |
bm_species == bm_species_fac_levels[10] |
bm_species == bm_species_fac_levels[11] |
bm_species == bm_species_fac_levels[12] |
bm_species == bm_species_fac_levels[13] |
bm_species == bm_species_fac_levels[14] |
bm_species == bm_species_fac_levels[15] |
bm_species == bm_species_fac_levels[16] |
bm_species == bm_species_fac_levels[17]] <- 'ChLa'
bm_species_fac_levels
bm_species_fac_levels[21]
bm_species_fac_levels[18]
bm_species[bm_species == bm_species_fac_levels[18] |
bm_species == bm_species_fac_levels[19] |
bm_species == bm_species_fac_levels[20] |
bm_species == bm_species_fac_levels[21]] <- 'LITT'
bm_species_fac_levels[29]
bm_species_fac_levels[22]
bm_species[bm_species == bm_species_fac_levels[22] |
bm_species == bm_species_fac_levels[23] |
bm_species == bm_species_fac_levels[24] |
bm_species == bm_species_fac_levels[25] |
bm_species == bm_species_fac_levels[26] |
bm_species == bm_species_fac_levels[27] |
bm_species == bm_species_fac_levels[28] |
bm_species == bm_species_fac_levels[29]] <- 'GuSa'
bm_species_fac_levels
bm_species_fac_levels[30]
bm_species[bm_species == bm_species_fac_levels[30]] <- 'HeAn'
bm_species_fac_levels[31]
bm_species[bm_species == bm_species_fac_levels[31] |
bm_species == bm_species_fac_levels[32]] <- 'LaCo'
bm_species_fac_levels[36]
bm_species_fac_levels[33]
bm_species_fac_levels[37]
bm_species[bm_species == bm_species_fac_levels[37]] <- 'PrGl'
bm_species_fac_levels[39]
bm_species[bm_species == bm_species_fac_levels[38] |
bm_species == bm_species_fac_levels[39]]
bm_species[bm_species == bm_species_fac_levels[38] |
bm_species == bm_species_fac_levels[39]] <- 'RaCo'
bm_species_fac_levels
bm_species[bm_species == bm_species_fac_levels[40]]
bm_species[bm_species == bm_species_fac_levels[41] |
bm_species == bm_species_fac_levels[42] |
bm_species == bm_species_fac_levels[43] |
bm_species == bm_species_fac_levels[44] |
bm_species == bm_species_fac_levels[45] |
bm_species == bm_species_fac_levels[46]]
bm_species[bm_species == bm_species_fac_levels[41] |
bm_species == bm_species_fac_levels[42] |
bm_species == bm_species_fac_levels[43] |
bm_species == bm_species_fac_levels[44] |
bm_species == bm_species_fac_levels[45] |
bm_species == bm_species_fac_levels[46]] <- 'SoEl'
bm_species[bm_species == bm_species_fac_levels[47] |
bm_species == bm_species_fac_levels[48] |
bm_species == bm_species_fac_levels[49] |
bm_species == bm_species_fac_levels[50]]
bm_species_fac = bm_raw$Species
bm_species_fac_levels = levels(bm_species_fac)
bm_species = as.character(bm_raw$Species)
bm_species[bm_species == 'DEAD' | bm_species == 'dead' | bm_species == 'dead ' |
bm_species == 'DEAD '] <- 'DEAD'
bm_species[bm_species == bm_species_fac_levels[1] |
bm_species == bm_species_fac_levels[2]] <- 'AmPS'
bm_species[bm_species == bm_species_fac_levels[3] |
bm_species == bm_species_fac_levels[4] |
bm_species == bm_species_fac_levels[5] |
bm_species == bm_species_fac_levels[6] |
bm_species == bm_species_fac_levels[7] |
bm_species == bm_species_fac_levels[8]] <- 'BoGr'
bm_species[bm_species == bm_species_fac_levels[9] |
bm_species == bm_species_fac_levels[10] |
bm_species == bm_species_fac_levels[11] |
bm_species == bm_species_fac_levels[12] |
bm_species == bm_species_fac_levels[13] |
bm_species == bm_species_fac_levels[14] |
bm_species == bm_species_fac_levels[15] |
bm_species == bm_species_fac_levels[16] |
bm_species == bm_species_fac_levels[17]] <- 'ChLa'
bm_species[bm_species == bm_species_fac_levels[18] |
bm_species == bm_species_fac_levels[19] |
bm_species == bm_species_fac_levels[20] |
bm_species == bm_species_fac_levels[21]] <- 'LITT'
bm_species[bm_species == bm_species_fac_levels[22] |
bm_species == bm_species_fac_levels[23] |
bm_species == bm_species_fac_levels[24] |
bm_species == bm_species_fac_levels[25] |
bm_species == bm_species_fac_levels[26] |
bm_species == bm_species_fac_levels[27] |
bm_species == bm_species_fac_levels[28] |
bm_species == bm_species_fac_levels[29]] <- 'GuSa'
bm_species[bm_species == bm_species_fac_levels[30]] <- 'HeAn'
bm_species[bm_species == bm_species_fac_levels[31] |
bm_species == bm_species_fac_levels[32]] <- 'LaCo'
bm_species[bm_species == bm_species_fac_levels[33] |
bm_species == bm_species_fac_levels[34] |
bm_species == bm_species_fac_levels[35] |
bm_species == bm_species_fac_levels[36]] <- 'PoMu'
bm_species[bm_species == bm_species_fac_levels[37]] <- 'PrGl'
bm_species[bm_species == bm_species_fac_levels[38] |
bm_species == bm_species_fac_levels[39]] <- 'RaCo'
bm_species[bm_species == bm_species_fac_levels[40]] <- 'SaTr'
bm_species[bm_species == bm_species_fac_levels[41] |
bm_species == bm_species_fac_levels[42] |
bm_species == bm_species_fac_levels[43] |
bm_species == bm_species_fac_levels[44] |
bm_species == bm_species_fac_levels[45] |
bm_species == bm_species_fac_levels[46]] <- 'SoEl'
bm_species[bm_species == bm_species_fac_levels[47] |
bm_species == bm_species_fac_levels[48] |
bm_species == bm_species_fac_levels[49] |
bm_species == bm_species_fac_levels[50]] <- 'ZiGr'
bm_species
head(bm_raw)
## weight
bm_weight = bm_raw$Weight.g.
## check sizes and combine
nrow(bm_date)
## date
bm_date = rep(as.Date('2018-09-22'), times = 217)
## check sizes and combine
nrow(bm_date)
## check sizes and combine
length(bm_date)
length(bm_weight)
length(bm_date)
length(bm_plot)
length(bm_species)
length(bm_weight)
bm_clean = expand.grid(date = bm_date, plot = bm_plot)
bm_clean$code = bm_species
bm_clean$weight = bm_weight
head(bm_clean)
## add additional species information using the code
sp = read.csv('species.csv')
bm_clean$binomial = 'NA'
bm_clean$lifeform = 'NA'
bm_clean$family = 'NA'
for (i in 1:length(bm_clean$binomial)){
bm_clean$binomial[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Latin.binomial)
bm_clean$lifeform[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Life.form)
bm_clean$family[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Family)
}
bm_clean$genus = vapply(strsplit(bm_clean$binomial, " ", fixed = TRUE), "[", "", 1)
bm_clean$species = vapply(strsplit(bm_clean$binomial, " ", fixed = TRUE), "[", "", 2)
## check and write out
head(bm_clean)
bm_clean
tail(bm_clean)
bm_clean = expand.grid(date = bm_date, plot = bm_plot)
bm_clean$code = bm_species
bm_clean$weight = bm_weight
head(bm_clean)
tail(bm_clean)
length(bm_date)
length(bm_plot)
length(bm_species)
length(bm_weight)
bm_clean = expand.grid(date = bm_date, plot = bm_plot)
tail(bm_clean)
## check sizes and combine
length(bm_date)
bm_plot
bm_date
?expand.grid
## read in data
sm_raw = read.csv('raw/soil_moisture.csv')
head(sm_raw)
nrow(sm_raw)
## make a new data frame
sm_date = c(rep(as.Date('2018-07-27'), times = 80),
rep(as.Date('2018-08-03'), times = 80),
rep(as.Date('2018-08-09'), times = 80),
rep(as.Date('2018-08-16'), times = 80),
rep(as.Date('2018-08-24'), times = 80),
rep(as.Date('2018-08-30'), times = 80),
rep(as.Date('2018-09-07'), times = 80),
rep(as.Date('2018-09-16'), times = 80))
sm_plot = c(rep(seq(1, 40, 1), times = 16))
sm_location = rep(c(rep('under', times = 40), rep('away', times = 40)), times = 8)
sm_vwc_rows = c(2, 3, 5, 6, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 23, 24)
sm_vwc = c(as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[1]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[2]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[3]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[4]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[5]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[6]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[7]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[8]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[9]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[10]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[11]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[12]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[13]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[14]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[15]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[16]])))
## combine it all together
## combine it all together
sm_clean = expand.grid(date = sm_date, plot = sm_plot)
sm_date
sm_clean
nrow(sm_clean)
length(sm_date)
length(sm_plot)
length(sm_location)
length(sm_vwc)
library(reshape2)
sm_clean = melt(data.frame(sm_date, sm_plot))
sm_clean
?melt
data.frame(sm_date, sm_plot)
sm_clean = data.frame(sm_date, sm_plot)
sm_clean$location = sm_location
sm_clean$vwc = sm_vwc
head(sm_clean)
tail(sm_clean)
write.csv(sm_clean, 'sm_clean.csv')
bm_clean = data.frame(date = bm_date, plot = bm_plot)
bm_clean
sm_clean = data.frame(date = sm_date, plot = sm_plot)
sm_clean$location = sm_location
sm_clean$vwc = sm_vwc
head(sm_clean)
tail(sm_clean)
write.csv(sm_clean, 'sm_clean.csv')
bm_clean = data.frame(date = bm_date, plot = bm_plot)
bm_clean$code = bm_species
bm_clean$weight = bm_weight
head(bm_clean)
tail(bm_clean)
sp = read.csv('species.csv')
bm_clean$binomial = 'NA'
bm_clean$lifeform = 'NA'
bm_clean$family = 'NA'
for (i in 1:length(bm_clean$binomial)){
bm_clean$binomial[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Latin.binomial)
bm_clean$lifeform[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Life.form)
bm_clean$family[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Family)
}
bm_clean$genus = vapply(strsplit(bm_clean$binomial, " ", fixed = TRUE), "[", "", 1)
bm_clean$species = vapply(strsplit(bm_clean$binomial, " ", fixed = TRUE), "[", "", 2)
## check and write out
head(bm_clean)
tail(bm_clean)
write.csv(bm_clean, 'bm_clean.csv')
