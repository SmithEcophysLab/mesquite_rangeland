### will need to create new dataframe with date, plot, location, species, and weight
## date
bm_date = rep(as.Date('2018-09-22'), times = 217)
## plot
bm_plot = bm_raw$plot
## location
bm_location = as.character(bm_raw$X.A.U.)
bm_location[bm_location == 'A'] <- 'away'
bm_location[bm_location == 'a'] <- 'away'
bm_location[bm_location == 'a '] <- 'away'
bm_location[bm_location == 'u'] <- 'under'
bm_location[bm_location == 'U'] <- 'under'
## species
bm_species_fac = bm_raw$Species
bm_species_fac_levels = levels(bm_species_fac)
bm_species = as.character(bm_raw$Species)
bm_species[bm_species == 'DEAD' | bm_species == 'dead' | bm_species == 'dead ' |
bm_species == 'DEAD '] <- 'DEAD'
bm_species[bm_species == bm_species_fac_levels[1] |
bm_species == bm_species_fac_levels[2]] <- 'AmPS'
bm_species[bm_species == bm_species_fac_levels[3] |
bm_species == bm_species_fac_levels[4] |
bm_species == bm_species_fac_levels[5] |
bm_species == bm_species_fac_levels[6] |
bm_species == bm_species_fac_levels[7] |
bm_species == bm_species_fac_levels[8]] <- 'BoGr'
bm_species[bm_species == bm_species_fac_levels[9] |
bm_species == bm_species_fac_levels[10] |
bm_species == bm_species_fac_levels[11] |
bm_species == bm_species_fac_levels[12] |
bm_species == bm_species_fac_levels[13] |
bm_species == bm_species_fac_levels[14] |
bm_species == bm_species_fac_levels[15] |
bm_species == bm_species_fac_levels[16] |
bm_species == bm_species_fac_levels[17]] <- 'ChLa'
bm_species[bm_species == bm_species_fac_levels[18] |
bm_species == bm_species_fac_levels[19] |
bm_species == bm_species_fac_levels[20] |
bm_species == bm_species_fac_levels[21]] <- 'LITT'
bm_species[bm_species == bm_species_fac_levels[22] |
bm_species == bm_species_fac_levels[23] |
bm_species == bm_species_fac_levels[24] |
bm_species == bm_species_fac_levels[25] |
bm_species == bm_species_fac_levels[26] |
bm_species == bm_species_fac_levels[27] |
bm_species == bm_species_fac_levels[28] |
bm_species == bm_species_fac_levels[29]] <- 'GuSa'
bm_species[bm_species == bm_species_fac_levels[30]] <- 'HeAn'
bm_species[bm_species == bm_species_fac_levels[31] |
bm_species == bm_species_fac_levels[32]] <- 'LaCo'
bm_species[bm_species == bm_species_fac_levels[33] |
bm_species == bm_species_fac_levels[34] |
bm_species == bm_species_fac_levels[35] |
bm_species == bm_species_fac_levels[36]] <- 'PoMu'
bm_species[bm_species == bm_species_fac_levels[37]] <- 'PrGl'
bm_species[bm_species == bm_species_fac_levels[38] |
bm_species == bm_species_fac_levels[39]] <- 'RaCo'
bm_species[bm_species == bm_species_fac_levels[40]] <- 'SaTr'
bm_species[bm_species == bm_species_fac_levels[41] |
bm_species == bm_species_fac_levels[42] |
bm_species == bm_species_fac_levels[43] |
bm_species == bm_species_fac_levels[44] |
bm_species == bm_species_fac_levels[45] |
bm_species == bm_species_fac_levels[46]] <- 'SoEl'
bm_species[bm_species == bm_species_fac_levels[47] |
bm_species == bm_species_fac_levels[48] |
bm_species == bm_species_fac_levels[49] |
bm_species == bm_species_fac_levels[50]] <- 'ZiGr'
## weight
bm_weight = bm_raw$Weight.g.
## check sizes and combine
length(bm_date)
length(bm_plot)
length(bm_location)
length(bm_species)
length(bm_weight)
bm_clean = data.frame(date = bm_date, plot = bm_plot, location = bm_location)
bm_clean$code = bm_species
bm_clean$weight = bm_weight
head(bm_clean)
tail(bm_clean)
## add additional species information using the code
sp = read.csv('species.csv')
bm_clean$binomial = 'NA'
bm_clean$lifeform = 'NA'
bm_clean$family = 'NA'
for (i in 1:length(bm_clean$binomial)){
bm_clean$binomial[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Latin.binomial)
bm_clean$lifeform[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Life.form)
bm_clean$family[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Family)
}
bm_clean$genus = vapply(strsplit(bm_clean$binomial, " ", fixed = TRUE), "[", "", 1)
bm_clean$species = vapply(strsplit(bm_clean$binomial, " ", fixed = TRUE), "[", "", 2)
## check and write out
head(bm_clean)
tail(bm_clean)
sort(bm_clean, date, plot, location, code)
?order
order(bm_clean, date, plot, location, code)
?sort
?arrange
arrange(bm_clean, date, plot, location, code
)
bm_clean = arrange(bm_clean, date, plot, location, code)
write.csv(bm_clean, 'bm_clean.csv')
# Clean mesquite LAI data
## script to clean the LAI data for the mesquite comparison
## load packages
library(tidyverse)
library(reshape2)
## read in data
lai_raw = read.csv('clean_lai/lai_output.csv')
head(lai_raw)
nrow(lai_raw)
## will need to create a data frame with date, plot, and LAI
## date
lai_date = rep(as.Date('2018-09-22'), times = nrow(lai_raw)) # for all 40 plots
## add remarks to LAI data (to indicate plot #)
lai_remarks = read.csv('clean_lai/lai_remarks.csv')
lai_raw$remark = 'NA'
for (i in 1:length(lai_raw$B_Obs)){
lai_raw$remark[lai_raw$B_Obs == lai_raw$B_Obs[i]] <- as.character(lai_remarks$Remark[lai_remarks$B_Obs == lai_raw$B_Obs[i]])
}
lai_plot = as.numeric(sapply(strsplit(lai_raw$remark, 'P'), '[', 2))
## combine it all together
lai_clean = data.frame(date = lai_date, plot = lai_plot, lai = lai_raw$LAI)
## check and write out
head(lai_clean)
tail(lai_clean)
lai_clean = arrange(lai_clean, date, plot)
write.csv(lai_clean, 'lai_clean.csv')
## load packages
library(tidyverse)
library(reshape2)
## read in data
sm_raw = read.csv('raw/soil_moisture.csv')
head(sm_raw)
nrow(sm_raw)
## make a new data frame
sm_date = c(rep(as.Date('2018-07-27'), times = 80),
rep(as.Date('2018-08-03'), times = 80),
rep(as.Date('2018-08-09'), times = 80),
rep(as.Date('2018-08-16'), times = 80),
rep(as.Date('2018-08-24'), times = 80),
rep(as.Date('2018-08-30'), times = 80),
rep(as.Date('2018-09-07'), times = 80),
rep(as.Date('2018-09-16'), times = 80))
sm_plot = c(rep(seq(1, 40, 1), times = 16))
sm_location = rep(c(rep('under', times = 40), rep('away', times = 40)), times = 8)
sm_vwc_rows = c(2, 3, 5, 6, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 23, 24)
sm_vwc = c(as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[1]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[2]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[3]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[4]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[5]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[6]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[7]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[8]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[9]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[10]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[11]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[12]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[13]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[14]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[15]])),
as.numeric(as.character(sm_raw[2:41, sm_vwc_rows[16]])))
## combine it all together
length(sm_date)
length(sm_plot)
length(sm_location)
length(sm_vwc)
sm_clean = data.frame(date = sm_date, plot = sm_plot)
sm_clean$location = sm_location
sm_clean$vwc = sm_vwc
head(sm_clean)
tail(sm_clean)
arrange(sm_clean, date, plot, location)
sm_clean = arrange(sm_clean, date, plot, location)
write.csv(sm_clean, 'sm_clean.csv')
setwd('../analysis')
## load libraries
library(tidyverse)
library(vioplot)
library(lme4)
library(car)
library(emmeans)
## read in data
sm = read.csv("../data/sm_clean.csv") # soil moisture
bm = read.csv("../data/bm_clean.csv") # biomass
lai = read.csv("../data/lai_clean.csv") # lai
##########################################################################################
### Q1: What does the size distribution (in LAI) of the trees look like?
##########################################################################################
#### create a histogram
hist(lai$lai,breaks = 20)
sm_dates = levels(sm$date)
t.test(subset(sm, location == 'under')$vwc, subset(sm, location == 'away')$vwc,
paired = T)
t.test(subset(sm, location == 'under' & date == sm_dates[1])$vwc,
subset(sm, location == 'away' & date == sm_dates[1])$vwc,
paired = T)
t.test(subset(sm, location == 'under' & date == sm_dates[2])$vwc,
subset(sm, location == 'away' & date == sm_dates[2])$vwc,
paired = T)
t.test(subset(sm, location == 'under' & date == sm_dates[3])$vwc,
subset(sm, location == 'away' & date == sm_dates[3])$vwc,
paired = T)
t.test(subset(sm, location == 'under' & date == sm_dates[4])$vwc,
subset(sm, location == 'away' & date == sm_dates[4])$vwc,
paired = T)
t.test(subset(sm, location == 'under' & date == sm_dates[5])$vwc,
subset(sm, location == 'away' & date == sm_dates[5])$vwc,
paired = T)
t.test(subset(sm, location == 'under' & date == sm_dates[6])$vwc,
subset(sm, location == 'away' & date == sm_dates[6])$vwc,
paired = T)
t.test(subset(sm, location == 'under' & date == sm_dates[7])$vwc,
subset(sm, location == 'away' & date == sm_dates[7])$vwc,
paired = T)
t.test(subset(sm, location == 'under' & date == sm_dates[8])$vwc,
subset(sm, location == 'away' & date == sm_dates[8])$vwc,
paired = T)
#### plot the data
sm_vioplot = vioplot(subset(sm, location == 'under')$vwc,
subset(sm, location == 'away')$vwc,
ylim = c(0, 40), yaxt = 'n',
names = c('Under', 'Away'))
#### plot the data
sm_vioplot = vioplot(subset(sm, location == 'under')$vwc,
subset(sm, location == 'away')$vwc,
ylim = c(0, 40), yaxt = 'n',
names = c('Under', 'Away')
col = c('grey', 'yellow'))
axis(2, seq(0, 40, 10), las = 1)
#### plot the data
sm_vioplot = vioplot(subset(sm, location == 'under')$vwc,
subset(sm, location == 'away')$vwc,
ylim = c(0, 40), yaxt = 'n',
names = c('Under', 'Away'),
col = c('grey', 'yellow'))
axis(2, seq(0, 40, 10), las = 1)
sm_vioplot_date = plot(NULL, ylim = c(0, 40), xlim = c(1, 16), yaxt = 'n', xaxt = 'n',
ylab = '', xlab = '')
sm_vioplot_date = vioplot(subset(sm, location == 'under' & date == sm_dates[1])$vwc,
subset(sm, location == 'away' & date == sm_dates[1])$vwc,
subset(sm, location == 'under' & date == sm_dates[2])$vwc,
subset(sm, location == 'away' & date == sm_dates[2])$vwc,
subset(sm, location == 'under' & date == sm_dates[3])$vwc,
subset(sm, location == 'away' & date == sm_dates[3])$vwc,
subset(sm, location == 'under' & date == sm_dates[4])$vwc,
subset(sm, location == 'away' & date == sm_dates[4])$vwc,
subset(sm, location == 'under' & date == sm_dates[5])$vwc,
subset(sm, location == 'away' & date == sm_dates[5])$vwc,
subset(sm, location == 'under' & date == sm_dates[6])$vwc,
subset(sm, location == 'away' & date == sm_dates[6])$vwc,
subset(sm, location == 'under' & date == sm_dates[7])$vwc,
subset(sm, location == 'away' & date == sm_dates[7])$vwc,
subset(sm, location == 'under' & date == sm_dates[8])$vwc,
subset(sm, location == 'away' & date == sm_dates[8])$vwc,
add = T,
col = rep(c('grey', 'yellow'), times = 8),
ylab = '', xlab = '')
axis(2, seq(0, 40, 10), las = 1)
axis(1, seq(1, 8, 1), at = seq(1.5, 15.5, 2))
mtext(side = 1, 'Measurement Period', line = 3)
mtext(side = 2, 'VWC (%)', line = 3)
legend('topright', c('Under', 'Away'), pch = 16, col = c('grey', 'yellow'))
##########################################################################################
### Q3: Is biomass different under the mesquite?
##########################################################################################
#### total biomass
##### get total biomass for each plot
bm_total_group_by = group_by(bm, date, plot, location)
bm_total = summarise(bm_total_group_by, weight_sum = sum(weight))
t.test(subset(bm_total, location == 'under')$weight_sum,
subset(bm_total, location == 'away')$weight_sum,
paired = T)
subset(bm_total, location == 'under')$weight_sum
length(subset(bm_total, location == 'under')$weight_sum)
subset(bm_total, location == 'under')
bm = read.csv("../data/bm_clean.csv") # biomass
bm
setwd('../data')
## load packages
library(tidyverse)
library(reshape2)
## read in data
bm_raw = read.csv('raw/biomass.csv')
head(bm_raw)
nrow(bm_raw)
### will need to create new dataframe with date, plot, location, species, and weight
## date
bm_date = rep(as.Date('2018-09-22'), times = 217)
## plot
bm_plot = bm_raw$plot
## location
bm_location = as.character(bm_raw$X.A.U.)
bm_location[bm_location == 'A'] <- 'away'
bm_location[bm_location == 'a'] <- 'away'
bm_location[bm_location == 'a '] <- 'away'
bm_location[bm_location == 'u'] <- 'under'
bm_location[bm_location == 'U'] <- 'under'
## species
bm_species_fac = bm_raw$Species
bm_species_fac_levels = levels(bm_species_fac)
bm_species = as.character(bm_raw$Species)
bm_species[bm_species == 'DEAD' | bm_species == 'dead' | bm_species == 'dead ' |
bm_species == 'DEAD '] <- 'DEAD'
bm_species[bm_species == bm_species_fac_levels[1] |
bm_species == bm_species_fac_levels[2]] <- 'AmPS'
bm_species[bm_species == bm_species_fac_levels[3] |
bm_species == bm_species_fac_levels[4] |
bm_species == bm_species_fac_levels[5] |
bm_species == bm_species_fac_levels[6] |
bm_species == bm_species_fac_levels[7] |
bm_species == bm_species_fac_levels[8]] <- 'BoGr'
bm_species[bm_species == bm_species_fac_levels[9] |
bm_species == bm_species_fac_levels[10] |
bm_species == bm_species_fac_levels[11] |
bm_species == bm_species_fac_levels[12] |
bm_species == bm_species_fac_levels[13] |
bm_species == bm_species_fac_levels[14] |
bm_species == bm_species_fac_levels[15] |
bm_species == bm_species_fac_levels[16] |
bm_species == bm_species_fac_levels[17]] <- 'ChLa'
bm_species[bm_species == bm_species_fac_levels[18] |
bm_species == bm_species_fac_levels[19] |
bm_species == bm_species_fac_levels[20] |
bm_species == bm_species_fac_levels[21]] <- 'LITT'
bm_species[bm_species == bm_species_fac_levels[22] |
bm_species == bm_species_fac_levels[23] |
bm_species == bm_species_fac_levels[24] |
bm_species == bm_species_fac_levels[25] |
bm_species == bm_species_fac_levels[26] |
bm_species == bm_species_fac_levels[27] |
bm_species == bm_species_fac_levels[28] |
bm_species == bm_species_fac_levels[29]] <- 'GuSa'
bm_species[bm_species == bm_species_fac_levels[30]] <- 'HeAn'
bm_species[bm_species == bm_species_fac_levels[31] |
bm_species == bm_species_fac_levels[32]] <- 'LaCo'
bm_species[bm_species == bm_species_fac_levels[33] |
bm_species == bm_species_fac_levels[34] |
bm_species == bm_species_fac_levels[35] |
bm_species == bm_species_fac_levels[36]] <- 'PoMu'
bm_species[bm_species == bm_species_fac_levels[37]] <- 'PrGl'
bm_species[bm_species == bm_species_fac_levels[38] |
bm_species == bm_species_fac_levels[39]] <- 'RaCo'
bm_species[bm_species == bm_species_fac_levels[40]] <- 'SaTr'
bm_species[bm_species == bm_species_fac_levels[41] |
bm_species == bm_species_fac_levels[42] |
bm_species == bm_species_fac_levels[43] |
bm_species == bm_species_fac_levels[44] |
bm_species == bm_species_fac_levels[45] |
bm_species == bm_species_fac_levels[46]] <- 'SoEl'
bm_species[bm_species == bm_species_fac_levels[47] |
bm_species == bm_species_fac_levels[48] |
bm_species == bm_species_fac_levels[49] |
bm_species == bm_species_fac_levels[50]] <- 'ZiGr'
## weight
bm_weight = bm_raw$Weight.g.
## check sizes and combine
length(bm_date)
length(bm_plot)
length(bm_location)
length(bm_species)
length(bm_weight)
bm_clean = data.frame(date = bm_date, plot = bm_plot, location = bm_location)
bm_clean$code = bm_species
bm_clean$weight = bm_weight
head(bm_clean)
tail(bm_clean)
## add additional species information using the code
sp = read.csv('species.csv')
bm_clean$binomial = 'NA'
bm_clean$lifeform = 'NA'
bm_clean$family = 'NA'
for (i in 1:length(bm_clean$binomial)){
bm_clean$binomial[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Latin.binomial)
bm_clean$lifeform[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Life.form)
bm_clean$family[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Family)
}
bm_clean$genus = vapply(strsplit(bm_clean$binomial, " ", fixed = TRUE), "[", "", 1)
bm_clean$species = vapply(strsplit(bm_clean$binomial, " ", fixed = TRUE), "[", "", 2)
## check and write out
head(bm_clean)
tail(bm_clean)
# bm_clean = arrange(bm_clean, date, plot, location, code)
# write.csv(bm_clean, 'bm_clean.csv')
subset(bm_clean plot == 9)
subset(bm_clean, plot == 9)
## load packages
library(tidyverse)
library(reshape2)
## read in data
bm_raw = read.csv('raw/biomass.csv')
head(bm_raw)
nrow(bm_raw)
subset(bm_raw, plot == 9)
## date
bm_date = rep(as.Date('2018-09-22'), times = 218)
## plot
bm_plot = bm_raw$plot
## location
bm_location = as.character(bm_raw$X.A.U.)
bm_location[bm_location == 'A'] <- 'away'
bm_location[bm_location == 'a'] <- 'away'
bm_location[bm_location == 'a '] <- 'away'
bm_location[bm_location == 'u'] <- 'under'
bm_location[bm_location == 'U'] <- 'under'
bm_species_fac = bm_raw$Species
bm_species_fac_levels = levels(bm_species_fac)
bm_species = as.character(bm_raw$Species)
bm_species_fac_levels
bm_species[bm_species == bm_species_fac_levels[1] |
bm_species == bm_species_fac_levels[2]] <- 'AmPS'
bm_species[bm_species == bm_species_fac_levels[3] |
bm_species == bm_species_fac_levels[4] |
bm_species == bm_species_fac_levels[5] |
bm_species == bm_species_fac_levels[6] |
bm_species == bm_species_fac_levels[7] |
bm_species == bm_species_fac_levels[8]] <- 'BoGr'
bm_species[bm_species == bm_species_fac_levels[9] |
bm_species == bm_species_fac_levels[10] |
bm_species == bm_species_fac_levels[11] |
bm_species == bm_species_fac_levels[12] |
bm_species == bm_species_fac_levels[13] |
bm_species == bm_species_fac_levels[14] |
bm_species == bm_species_fac_levels[15] |
bm_species == bm_species_fac_levels[16] |
bm_species == bm_species_fac_levels[17]] <- 'ChLa'
bm_species[bm_species == bm_species_fac_levels[18] |
bm_species == bm_species_fac_levels[19] |
bm_species == bm_species_fac_levels[20] |
bm_species == bm_species_fac_levels[21]] <- 'LITT'
bm_species[bm_species == bm_species_fac_levels[22] |
bm_species == bm_species_fac_levels[23] |
bm_species == bm_species_fac_levels[24] |
bm_species == bm_species_fac_levels[25] |
bm_species == bm_species_fac_levels[26] |
bm_species == bm_species_fac_levels[27] |
bm_species == bm_species_fac_levels[28] |
bm_species == bm_species_fac_levels[29]] <- 'GuSa'
bm_species[bm_species == bm_species_fac_levels[30]] <- 'HeAn'
bm_species[bm_species == bm_species_fac_levels[31] |
bm_species == bm_species_fac_levels[32]] <- 'LaCo'
bm_species[bm_species == bm_species_fac_levels[33] |
bm_species == bm_species_fac_levels[34] |
bm_species == bm_species_fac_levels[35] |
bm_species == bm_species_fac_levels[36]] <- 'PoMu'
bm_species[bm_species == bm_species_fac_levels[37]] <- 'PrGl'
bm_species[bm_species == bm_species_fac_levels[38] |
bm_species == bm_species_fac_levels[39]] <- 'RaCo'
bm_species[bm_species == bm_species_fac_levels[40]] <- 'SaTr'
bm_species[bm_species == bm_species_fac_levels[41] |
bm_species == bm_species_fac_levels[42] |
bm_species == bm_species_fac_levels[43] |
bm_species == bm_species_fac_levels[44] |
bm_species == bm_species_fac_levels[45] |
bm_species == bm_species_fac_levels[46]] <- 'SoEl'
bm_species[bm_species == bm_species_fac_levels[47] |
bm_species == bm_species_fac_levels[48] |
bm_species == bm_species_fac_levels[49] |
bm_species == bm_species_fac_levels[50]] <- 'ZiGr'
bm_species
bm_species_fac_levels[21]
## weight
bm_weight = bm_raw$Weight.g.
## check sizes and combine
length(bm_date)
length(bm_plot)
length(bm_location)
length(bm_species)
length(bm_weight)
bm_clean = data.frame(date = bm_date, plot = bm_plot, location = bm_location)
bm_clean$code = bm_species
bm_clean$weight = bm_weight
head(bm_clean)
tail(bm_clean)
## add additional species information using the code
sp = read.csv('species.csv')
bm_clean$binomial = 'NA'
bm_clean$lifeform = 'NA'
bm_clean$family = 'NA'
for (i in 1:length(bm_clean$binomial)){
bm_clean$binomial[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Latin.binomial)
bm_clean$lifeform[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Life.form)
bm_clean$family[i] <- as.character(subset(sp, Code == as.character(bm_clean$code[i]))$Family)
}
bm_clean$genus = vapply(strsplit(bm_clean$binomial, " ", fixed = TRUE), "[", "", 1)
bm_clean$species = vapply(strsplit(bm_clean$binomial, " ", fixed = TRUE), "[", "", 2)
## check and write out
head(bm_clean)
tail(bm_clean)
bm_clean = arrange(bm_clean, date, plot, location, code)
write.csv(bm_clean, 'bm_clean.csv')
subset(bm_clean, plot == 9)
setwd('../analysis')
bm = read.csv("../data/bm_clean.csv") # biomass
##########################################################################################
### Q3: Is biomass different under the mesquite?
##########################################################################################
#### total biomass
##### get total biomass for each plot
bm_total_group_by = group_by(bm, date, plot, location)
bm_total = summarise(bm_total_group_by, weight_sum = sum(weight))
t.test(subset(bm_total, location == 'under')$weight_sum,
subset(bm_total, location == 'away')$weight_sum,
paired = T)
##### run the analysis
hist(bm_total$weight$sum)
##### run the analysis
hist(bm_total$weight_sum)
